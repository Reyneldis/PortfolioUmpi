---
import { ModeToggle } from './ModeToggle';

const navItems = [
	{
		title: 'Experiencia',
		label: 'experiencia',
		url: '/#experiencia',
	},
	{
		title: 'Proyectos',
		label: 'proyectos',
		url: '/#projects',
	},

	{
		title: 'Sobre mí',
		label: 'sobre-mi',
		url: '/#about',
	},
	{
		title: 'Contacto',
		label: 'contacto',
		url: '/#contacto',
	},
];
---

<header class="fixed top-0 z-10 mx-auto mt-2 grid w-[100vw] place-content-center items-center">
	<nav
		class="flex max-w-[95vw] flex-wrap items-center justify-center rounded-full border border-gray-200/20 bg-white/10 px-4 py-2 text-sm font-medium text-orange-500 shadow-lg transition-all duration-300 sm:max-w-[90vw] sm:px-6 md:max-w-[80vw] lg:max-w-[70vw] dark:border-gray-700/30 dark:bg-gray-900/20 dark:text-orange-400"
	>
		{
			navItems.map(link => (
				<a
					class="block relative px-2 py-2 text-center transition-all duration-300 nav-link hover:text-orange-400 sm:px-4 dark:hover:text-orange-300"
					aria-label={link.label}
					href={link.url}
				>
					{link.title}
				</a>
			))
		}
		<ModeToggle client:load />
	</nav>
	<style>
		@keyframes fadeIn {
			from {
				opacity: 0;
				transform: translateY(-10px);
			}
			to {
				opacity: 1;
				transform: translateY(0);
			}
		}

		.animate-fade-in {
			animation: fadeIn 0.5s ease-out forwards;
		}

		.nav-link {
			position: relative;
			font-family: 'Poppins', sans-serif;
			transition: all 0.3s ease;
			color: #e98008;
		}

		.nav-link::before {
			content: '';
			position: absolute;
			width: 0;
			height: 2px;
			bottom: 0;
			left: 0;
			background: linear-gradient(90deg, #e98008, #f97316);
			transition: width 0.3s ease;
			border-radius: 2px;
		}

		.nav-link:hover::before {
			width: 100%;
		}

		.nav-link:hover {
			transform: translateY(-2px);
			color: #f97316;
		}

		/* Efecto de scroll modificado */
		header {
			transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
		}

		header.scrolled {
			background: transparent;
			backdrop-filter: none;
			box-shadow: none;
		}

		header.scrolled nav {
			background: rgba(255, 255, 255, 0.9);
			backdrop-filter: blur(10px);
			box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
		}

		:global(.dark) header.scrolled nav {
			background: rgba(17, 24, 39, 0.7);
			backdrop-filter: blur(8px);
			box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
		}

		/* Animación de entrada para los enlaces */
		.nav-link {
			opacity: 0;
			animation: slideIn 0.5s ease forwards;
		}

		@keyframes slideIn {
			from {
				opacity: 0;
				transform: translateY(-10px);
			}
			to {
				opacity: 1;
				transform: translateY(0);
			}
		}

		/* Aplicar retraso a cada enlace */
		.nav-link:nth-child(1) {
			animation-delay: 0.1s;
		}
		.nav-link:nth-child(2) {
			animation-delay: 0.2s;
		}
		.nav-link:nth-child(3) {
			animation-delay: 0.3s;
		}
		.nav-link:nth-child(4) {
			animation-delay: 0.4s;
		}

		/* Estilos responsivos */
		@media (max-width: 640px) {
			.nav-link {
				font-size: 0.875rem;
				padding: 0.5rem 0.75rem;
			}

			header.scrolled nav {
				padding: 0.5rem;
				margin: 0 0.5rem;
			}
		}

		@media (max-width: 480px) {
			.nav-link {
				font-size: 0.75rem;
				padding: 0.375rem 0.5rem;
			}

			header.scrolled nav {
				padding: 0.375rem;
				margin: 0 0.25rem;
			}
		}

		/* Ajustes para el modo oscuro en móvil */
		@media (max-width: 640px) {
			:global(.dark) header.scrolled nav {
				background: rgba(17, 24, 39, 0.8);
			}
		}

		/* Mejoras en la animación para móvil */
		@media (max-width: 640px) {
			.nav-link::before {
				height: 1px;
			}

			.nav-link:hover {
				transform: translateY(-1px);
			}
		}

		/* Ajustes de espaciado para diferentes tamaños */
		@media (min-width: 768px) {
			.nav-link {
				margin: 0 0.25rem;
			}
		}

		@media (min-width: 1024px) {
			.nav-link {
				margin: 0 0.5rem;
			}
		}

		/* Ajuste del gradiente para el modo oscuro */
		:global(.dark) .nav-link {
			color: #f97316;
		}

		:global(.dark) .nav-link::before {
			background: linear-gradient(90deg, #f97316, #fb923c);
		}
	</style>

	<script>
		// Optimizar el manejo de scroll usando requestAnimationFrame
		const header = document.querySelector('header');
		let ticking = false;

		window.addEventListener('scroll', () => {
			if (!ticking) {
				window.requestAnimationFrame(() => {
					const currentScroll = window.pageYOffset;
					const isMobile = window.innerWidth <= 640;

					if (currentScroll > (isMobile ? 30 : 50)) {
						header?.classList.add('scrolled');
					} else {
						header?.classList.remove('scrolled');
					}

					ticking = false;
				});
				ticking = true;
			}
		});

		// Optimizar las animaciones de los enlaces
		const navLinks = document.querySelectorAll('.nav-link');
		const isMobile = window.innerWidth <= 640;

		// Usar IntersectionObserver para las animaciones
		const observer = new IntersectionObserver(
			entries => {
				entries.forEach(entry => {
					if (entry.isIntersecting) {
						entry.target.style.animationDelay = `${Array.from(navLinks).indexOf(entry.target) * (isMobile ? 0.05 : 0.1)}s`;
					}
				});
			},
			{ threshold: 0.1 }
		);

		navLinks.forEach(link => observer.observe(link));
	</script>
</header>
