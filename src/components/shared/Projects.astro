---
interface Project {
	title: string;
	description: string;
	image: string;
	technologies: string[];
	githubUrl?: string;
	liveUrl?: string;
}

const projects: Project[] = [
	{
		title: 'Portfolio Personal',
		description: 'Mi portfolio personal construido con Astro y Tailwind CSS',
		image: '../../../public/imagen/m.webp',
		technologies: ['Astro', 'Tailwind CSS', 'TypeScript'],
		githubUrl: 'https://github.com/Reyneldis/portfolio',
		liveUrl: 'https://reyneldis.dev',
	},
	{
		title: 'Portfolio Personal',
		description: 'Mi portfolio personal construido con Astro y Tailwind CSS',
		image: '../../../public/imagen/m.webp',
		technologies: ['Astro', 'Tailwind CSS', 'TypeScript'],
		githubUrl: 'https://github.com/Reyneldis/portfolio',
		liveUrl: 'https://reyneldis.dev',
	},
];
---

<section
	class="mx-auto w-full max-w-[95vw] px-4 py-12 sm:max-w-[90vw] sm:px-6 sm:py-20 md:max-w-[80vw] lg:max-w-[70vw]"
>
	<div class="grid gap-16 md:grid-cols-2">
		{
			projects.map((project, index) => (
				<article class="relative group scroll-reveal" style={`animation-delay: ${index * 100}ms`}>
					<div class="overflow-hidden relative rounded-xl">
						<img
							src={project.image}
							alt={project.title}
							loading="lazy"
							width="800"
							height="450"
							decoding="async"
							class="aspect-[4/3] w-full object-cover transition-all duration-500 group-hover:scale-[1.02]"
						/>
						<div class="absolute inset-0 bg-gradient-to-t opacity-0 transition-all duration-500 from-black/40 via-black/0 to-black/0 group-hover:opacity-100" />
					</div>

					<div class="mt-6 space-y-3">
						<div class="flex justify-between items-start">
							<h3 class="text-lg font-medium text-gray-900 dark:text-white">{project.title}</h3>
							<div class="flex gap-3">
								{project.githubUrl && (
									<a
										href={project.githubUrl}
										target="_blank"
										rel="noopener noreferrer"
										class="text-gray-400 transition-colors hover:text-orange-500 dark:text-gray-500 dark:hover:text-orange-400"
									>
										<svg
											class="size-5"
											xmlns="http://www.w3.org/2000/svg"
											viewBox="0 0 24 24"
											fill="none"
											stroke="currentColor"
											stroke-width="1.5"
											stroke-linecap="round"
											stroke-linejoin="round"
										>
											<path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22" />
										</svg>
									</a>
								)}

								{project.liveUrl && (
									<a
										href={project.liveUrl}
										target="_blank"
										rel="noopener noreferrer"
										class="text-gray-400 transition-colors hover:text-orange-500 dark:text-gray-500 dark:hover:text-orange-400"
									>
										<svg
											class="size-5"
											xmlns="http://www.w3.org/2000/svg"
											viewBox="0 0 24 24"
											fill="none"
											stroke="currentColor"
											stroke-width="1.5"
											stroke-linecap="round"
											stroke-linejoin="round"
										>
											<path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
											<polyline points="15 3 21 3 21 9" />
											<line x1="10" y1="14" x2="21" y2="3" />
										</svg>
									</a>
								)}
							</div>
						</div>

						<p class="text-sm text-gray-600 dark:text-gray-400">{project.description}</p>

						<div class="flex flex-wrap gap-2">
							{project.technologies.map(tech => (
								<span class="text-xs text-gray-500 dark:text-gray-500">{tech}</span>
							))}
						</div>
					</div>
				</article>
			))
		}
	</div>
</section>
